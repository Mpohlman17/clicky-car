{"version":3,"sources":["components/VehicleCard/VehicleCard.js","components/Navbar/Navbar.js","components/Wrapper/Wrapper.js","components/Title/Title.js","Container.js","Row.js","Column.js","App.js","index.js"],"names":["VehicleCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Navbar","href","rightWrong","score","topScore","Wrapper","children","Title","Container","concat","fluid","Row","Column","size","split","map","join","App","state","vehicles","currentScore","clicked","_this","indexOf","handleIncrement","setState","handleReset","newScore","handleShuffle","shuffledVehicles","array","i","length","j","Math","floor","random","_ref","shuffleVehicles","_this2","this","components_Wrapper_Wrapper","components_Navbar_Navbar","title","components_Title_Title","src_Container","src_Row","vehicle","src_Column","components_VehicleCard_VehicleCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"uh/BAiBeA,SAZK,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVC,MAAOL,EAAMM,GACbC,QAAS,kBAAMP,EAAMQ,YAAYR,EAAMM,MAEvCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKM,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,YCExBC,SAXA,SAAAb,GAAK,OAClBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,KAAGW,KAAK,iBAAR,cACAb,EAAAC,EAAAC,cAAA,MAAIG,GAAG,MAAMN,EAAMe,YACnBd,EAAAC,EAAAC,cAAA,MAAIG,GAAG,WAAP,kBAAiCN,EAAMgB,OACvCf,EAAAC,EAAAC,cAAA,MAAIG,GAAG,WAAP,cAA6BN,EAAMiB,cCJ1BC,SAFC,SAAAlB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMmB,YCE1CC,SAFD,SAAApB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMmB,YCKrCE,EANG,SAAArB,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAkB,OAActB,EAAMuB,MAAQ,SAAW,KAClDvB,EAAMmB,WCEIK,EAJH,SAAAxB,GAAK,OACfC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAkB,OAAQtB,EAAMuB,MAAQ,SAAW,KAAOvB,EAAMmB,WCO/CM,EARA,SAAAzB,GACb,IAAM0B,EAAO1B,EAAM0B,KAChBC,MAAM,KACNC,IAAI,SAAAF,GAAI,MAAI,OAASA,IACrBG,KAAK,KACR,OAAO5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWsB,GAAO1B,EAAMmB,4BCiGvBW,6MAnFbC,MAAQ,CACNC,WACAC,aAAc,EACdhB,SAAU,EACVF,WAAY,iBACZmB,QAAS,MAGX1B,YAAc,SAAAF,IAC4B,IAApC6B,EAAKJ,MAAMG,QAAQE,QAAQ9B,IAC7B6B,EAAKE,kBACLF,EAAKG,SAAS,CAAEJ,QAASC,EAAKJ,MAAMG,QAAQZ,OAAOhB,MAEnD6B,EAAKI,iBAITF,gBAAkB,WAChB,IAAMG,EAAWL,EAAKJ,MAAME,aAAe,EAC3CE,EAAKG,SAAS,CACZL,aAAcO,EACdzB,WAAY,KAEVyB,GAAYL,EAAKJ,MAAMd,SACzBkB,EAAKG,SAAS,CAAErB,SAAUuB,IACJ,KAAbA,GACTL,EAAKG,SAAS,CAAEvB,WAAY,aAE9BoB,EAAKM,mBAGPF,YAAc,WACZJ,EAAKG,SAAS,CACZL,aAAc,EACdhB,SAAUkB,EAAKJ,MAAMd,SACrBF,WAAY,GACZmB,QAAS,KAEXC,EAAKM,mBAGPA,cAAgB,WACd,IAAIC,EApDR,SAAyBC,GACvB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EA+CkBQ,CAAgBnB,GACvCG,EAAKG,SAAS,CAAEN,SAAUU,6EAGnB,IAAAU,EAAAC,KACP,OACEpD,EAAAC,EAAAC,cAACmD,EAAD,KACErD,EAAAC,EAAAC,cAACoD,EAAD,CACEC,MAAM,cACNxC,MAAOqC,KAAKtB,MAAME,aAClBhB,SAAUoC,KAAKtB,MAAMd,SACrBF,WAAYsC,KAAKtB,MAAMhB,aAGzBd,EAAAC,EAAAC,cAACsD,EAAD,mGAKAxD,EAAAC,EAAAC,cAACuD,EAAD,KACEzD,EAAAC,EAAAC,cAACwD,EAAD,KACGN,KAAKtB,MAAMC,SAASJ,IAAI,SAAAgC,GAAO,OAC9B3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAQnC,KAAK,aACXzB,EAAAC,EAAAC,cAAC2D,EAAD,CACEC,IAAKH,EAAQtD,GACbE,YAAa4C,EAAK5C,YAClB6B,gBAAiBe,EAAKf,gBACtBE,YAAaa,EAAKb,YAClBE,cAAeW,EAAKX,cACpBnC,GAAIsD,EAAQtD,GACZM,MAAOgD,EAAQhD,qBA1EfoD,mBCdlBC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.7bbe323b.chunk.js","sourcesContent":["//sets up the reusable VehicleCard component\nimport React from \"react\";\nimport \"./VehicleCard.css\";\n\n//pass the image into each card so all 12 are rendered\nconst VehicleCard = props => (\n  <div\n    className=\"card\"\n    value={props.id}\n    onClick={() => props.handleClick(props.id)}\n  >\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n);\n\nexport default VehicleCard;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n  <nav>\n    <div className=\"brand animated lightSpeedIn\">\n      <a href=\"/clicky-game/\">Start Over</a>\n      <h5 id=\"rw\">{props.rightWrong}</h5>\n      <h5 id=\"cur-sco\">Current Score: {props.score}</h5>\n      <h5 id=\"top-sco\">Top Score: {props.topScore}</h5>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;\n","import React from \"react\";\n\nconst Container = props => (\n  <div className={`container${props.fluid ? \"-fluid\" : \"\"}`}>\n    {props.children}\n  </div>\n);\n\nexport default Container;\n","import React from \"react\";\n\nconst Row = props => (\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`}>{props.children}</div>\n);\n\nexport default Row;\n","import React from \"react\";\n\nconst Column = props => {\n  const size = props.size\n    .split(\" \")\n    .map(size => \"col-\" + size)\n    .join(\" \");\n  return <div className={size}>{props.children}</div>;\n};\n\nexport default Column;\n","import React, { Component } from \"react\";\nimport VehicleCard from \"./components/VehicleCard\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport vehicles from \"./vehicle.json\";\nimport \"./App.css\";\n\nfunction shuffleVehicles(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Set this.state\n  state = {\n    vehicles,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"Are you ready?\",\n    clicked: []\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: \"\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    } else if (newScore === 12) {\n      this.setState({ rightWrong: \"You win!\" });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: \"\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledVehicles = shuffleVehicles(vehicles);\n    this.setState({ vehicles: shuffledVehicles });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          title=\"Clicky Game\"\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n          rightWrong={this.state.rightWrong}\n        />\n\n        <Title>\n          Try to click on each vehicle, but don't hit any duplicates, or we'll\n          release the hounds!!!\n        </Title>\n\n        <Container>\n          <Row>\n            {this.state.vehicles.map(vehicle => (\n              <Column size=\"md-3 sm-6\">\n                <VehicleCard\n                  key={vehicle.id}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                  id={vehicle.id}\n                  image={vehicle.image}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}